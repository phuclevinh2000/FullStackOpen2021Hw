{"version":3,"sources":["components/Note.js","components/Header.js","components/Form.js","components/Filter.js","services/persons.js","components/Notification.js","components/FailNotification.js","App.js","index.js"],"names":["Note","name","number","handleDelete","id","onClick","Header","head","Form","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","filterChange","filterPerson","filters","map","person","baseUrl","request","axios","get","console","log","then","response","data","newObject","post","put","delete","Notification","message","className","FailNotification","App","useState","persons","setPersons","setNewName","setNewNumber","setFilters","noti","setNoti","failNoti","setFailNoti","useEffect","personsService","initialNotes","list","filter","toLowerCase","includes","findPersonId","window","confirm","event","target","preventDefault","note","check","find","element","alert","personAfterUpdate","newPerson","catch","error","setTimeout","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8c08e8e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({name, number, handleDelete, id}) => {\r\n    return (\r\n        <div>\r\n            {name} {number} <button onClick={() => handleDelete(id, name)}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\n\r\nconst Header = ({head}) => {\r\n    return (\r\n        <h2>\r\n            {head}\r\n        </h2>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Form = ({handleSubmit, newName, handleNameChange, newNumber, handleNumberChange}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n        <div>\r\n          name: <input value={newName} onChange={handleNameChange}/>\r\n        </div>\r\n        <div>\r\n          number: <input value={newNumber} onChange={handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport Note from './Note'\r\n\r\nconst Filter = ({filterChange, filterPerson, filters}) => {\r\n    return (\r\n        <div>\r\n            name: <input value={filters} onChange={filterChange}/>\r\n            {\r\n                filters \r\n                ? filterPerson.map(person =>      //use map to fetch all the name in persons\r\n                    <Note key={person.name} name={person.name} number={person.number}/>\r\n                )\r\n                : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  console.log(request)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    return (\r\n        <div className=\"notification\">\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst FailNotification = ({message}) => {\r\n    return (\r\n        <div className=\"fail\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FailNotification\r\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Header from './components/Header'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\nimport FailNotification from './components/FailNotification'\nimport \"./index.css\"\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filters, setFilters ] = useState('')\n  const [ noti, setNoti ] = useState('')\n  const [ failNoti, setFailNoti] = useState('')\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n      })\n  }, [])\n\n  const filterChange = (event) => {\n    // console.log(event.target.value)\n    setFilters(event.target.value)\n  }\n  const handleNameChange = (event) => {\n    // console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    // console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  let list = filters //create a variable, check if filters exist, if exist then use JS filter, not not then set as persons\n  ? persons.filter(person => person.name.toLowerCase().includes(filters.toLowerCase()))\n  : persons\n  \n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    //create a new object by what you typed\n    const note = {\n      name: newName,\n      number: newNumber\n    }\t\n\n    \n    const check = persons.find(element => element.name === newName) //find the duplicate name\n\n    // console.log(note.name)\n    if(note.name === \"\" || note.number === \"\") {  //check if name and number is missing \n      alert(\"missing name or number\")\n    } else {\n      if(check) { //check if \"check is found\"\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {  //if found then ask if you want to replace the old content: ;\n          const id = persons.find(element => element.name === newName).id\n          personsService\n            .update(id, note)\n            .then(personAfterUpdate => {\n              const newPerson = persons.map(note => note.id !== id ? note : personAfterUpdate)\n              setPersons(newPerson)\n            })\n          .catch(error => {\n            // alert(\"The new information has been updated\")\n            setFailNoti(`Information of ${note.name} has already been removed from server, please refresed the page to see the change`)\n            setTimeout(() => {            //clear the notification after 5 seconds\n              setFailNoti(null)\n            }, 5000)\n          })\n        }\n      }\n      else  {\n        personsService\n        .create(note)\n        .then(initialNotes => {\n          setPersons(persons.concat(initialNotes))\n          setNewName('')  //clear the input\n          setNewNumber('')\n          setNoti(`Added ${note.name}`) //set the notification  box\n          setTimeout(() => {            //clear the notification after 5 seconds\n            setNoti(null)\n          }, 5000)\n        })\n       \n        setPersons(persons.concat(note))  //copy the new object to the end of the old object\n      }\n      setNewName('')  //clear the input\n      setNewNumber('') \n    } \n  }\n\n  const handleDelete = (id, name) => {\n    const findPersonId =  id;\n    \n    // console.log(name)\n    if (window.confirm(`Delete ${name}`)) {\n      personsService\n        .remove(findPersonId)\n        .then(response => {\n          setPersons(persons.filter(person => person.id!==id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <Header head=\"Phonebook\"/>\n      {\n        noti ? <Notification message={noti}/> : null  //display the notification if added info\n      }\n      {\n        failNoti ? <FailNotification message={failNoti}/> : null  //display the fail notification if added info\n      }\n      <Filter \n        filterChange={filterChange}\n        filters={filters}\n        filterPerson={list}\n      />\n      <Header head=\"add a new\"/>\n      <Form \n        handleNameChange={handleNameChange} \n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit} \n        newName={newName}\n        newNumber={newNumber}\n      />\n      <Header head=\"Numbers\"/>\n      {persons.map(person =>      //use map to fetch all the name in persons\n        <Note key={person.id} id={person.id} name={person.name} number={person.number} handleDelete={handleDelete}/>\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}